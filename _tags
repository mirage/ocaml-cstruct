# OASIS_START
# DO NOT EDIT (digest: a38e04d1a7edac911e37a43a42cb0d54)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library cstruct
"lib/cstruct.cmxs": use_cstruct
<lib/*.ml{,i,y}>: oasis_library_cstruct_ccopt
"lib/cstruct_stubs.c": oasis_library_cstruct_ccopt
<lib/cstruct.{cma,cmxa}>: use_libcstruct_stubs
<lib/*.ml{,i,y}>: pkg_bigarray
<lib/*.ml{,i,y}>: pkg_ocplib-endian
<lib/*.ml{,i,y}>: pkg_ocplib-endian.bigstring
<lib/*.ml{,i,y}>: pkg_sexplib
<lib/*.ml{,i,y}>: pkg_sexplib.syntax
"lib/cstruct_stubs.c": pkg_bigarray
"lib/cstruct_stubs.c": pkg_ocplib-endian
"lib/cstruct_stubs.c": pkg_ocplib-endian.bigstring
"lib/cstruct_stubs.c": pkg_sexplib
"lib/cstruct_stubs.c": pkg_sexplib.syntax
# Library async_cstruct
"async/async_cstruct.cmxs": use_async_cstruct
<async/*.ml{,i,y}>: pkg_async
<async/*.ml{,i,y}>: pkg_bigarray
<async/*.ml{,i,y}>: pkg_ocplib-endian
<async/*.ml{,i,y}>: pkg_ocplib-endian.bigstring
<async/*.ml{,i,y}>: pkg_sexplib
<async/*.ml{,i,y}>: pkg_sexplib.syntax
<async/*.ml{,i,y}>: pkg_threads
<async/*.ml{,i,y}>: use_cstruct
# Library lwt_cstruct
"lwt/lwt_cstruct.cmxs": use_lwt_cstruct
<lwt/*.ml{,i,y}>: pkg_bigarray
<lwt/*.ml{,i,y}>: pkg_lwt.unix
<lwt/*.ml{,i,y}>: pkg_ocplib-endian
<lwt/*.ml{,i,y}>: pkg_ocplib-endian.bigstring
<lwt/*.ml{,i,y}>: pkg_sexplib
<lwt/*.ml{,i,y}>: pkg_sexplib.syntax
<lwt/*.ml{,i,y}>: use_cstruct
# Library unix_cstruct
"unix/unix_cstruct.cmxs": use_unix_cstruct
<unix/*.ml{,i,y}>: pkg_bigarray
<unix/*.ml{,i,y}>: pkg_ocplib-endian
<unix/*.ml{,i,y}>: pkg_ocplib-endian.bigstring
<unix/*.ml{,i,y}>: pkg_sexplib
<unix/*.ml{,i,y}>: pkg_sexplib.syntax
<unix/*.ml{,i,y}>: pkg_unix
<unix/*.ml{,i,y}>: use_cstruct
# Library cstruct-syntax
"syntax/cstruct-syntax.cmxs": use_cstruct-syntax
<syntax/*.ml{,i,y}>: pkg_bigarray
<syntax/*.ml{,i,y}>: pkg_camlp4.extend
<syntax/*.ml{,i,y}>: pkg_camlp4.lib
<syntax/*.ml{,i,y}>: pkg_camlp4.quotations.r
# Executable ppx_cstruct
<ppx/ppx_cstruct.{native,byte}>: pkg_bigarray
<ppx/ppx_cstruct.{native,byte}>: pkg_compiler-libs.common
<ppx/ppx_cstruct.{native,byte}>: pkg_ppx_tools
<ppx/*.ml{,i,y}>: pkg_bigarray
<ppx/*.ml{,i,y}>: pkg_compiler-libs.common
<ppx/*.ml{,i,y}>: pkg_ppx_tools
<ppx/ppx_cstruct.{native,byte}>: custom
# Executable test_bounds
<lib_test/bounds.{native,byte}>: pkg_bigarray
<lib_test/bounds.{native,byte}>: pkg_oUnit
<lib_test/bounds.{native,byte}>: pkg_ocplib-endian
<lib_test/bounds.{native,byte}>: pkg_ocplib-endian.bigstring
<lib_test/bounds.{native,byte}>: pkg_sexplib
<lib_test/bounds.{native,byte}>: pkg_sexplib.syntax
<lib_test/bounds.{native,byte}>: pkg_unix
<lib_test/bounds.{native,byte}>: use_cstruct
<lib_test/bounds.{native,byte}>: use_unix_cstruct
<lib_test/*.ml{,i,y}>: pkg_unix
<lib_test/*.ml{,i,y}>: use_unix_cstruct
<lib_test/bounds.{native,byte}>: custom
# Executable misc_tests
<lib_test/tests.{native,byte}>: pkg_bigarray
<lib_test/tests.{native,byte}>: pkg_oUnit
<lib_test/tests.{native,byte}>: pkg_ocplib-endian
<lib_test/tests.{native,byte}>: pkg_ocplib-endian.bigstring
<lib_test/tests.{native,byte}>: pkg_sexplib
<lib_test/tests.{native,byte}>: pkg_sexplib.syntax
<lib_test/tests.{native,byte}>: use_cstruct
<lib_test/*.ml{,i,y}>: pkg_bigarray
<lib_test/*.ml{,i,y}>: pkg_oUnit
<lib_test/*.ml{,i,y}>: pkg_ocplib-endian
<lib_test/*.ml{,i,y}>: pkg_ocplib-endian.bigstring
<lib_test/*.ml{,i,y}>: pkg_sexplib
<lib_test/*.ml{,i,y}>: pkg_sexplib.syntax
<lib_test/*.ml{,i,y}>: use_cstruct
<lib_test/tests.{native,byte}>: custom
# OASIS_STOP
<syntax/*.ml>: syntax_camlp4o, pkg_camlp4
<lib_test/*.ml{i}>: syntax_camlp4o, pkg_camlp4, pkg_cstruct.syntax
true: annot, bin_annot, debug, principal

